=== MySQL COMMAND HISTORY ===
Generated on: [31/07/2025]
Extracted from: Prac02Work.out
=============================

-- Initial Connection and Setup
mysql -u username -p
USE dswork;
SELECT DATABASE();
SHOW TABLES;

-- Session Logging
tee Prac02Work.out;

-- Table Creation Phase
SOURCE create_tables.sql;
-- First attempt (with errors)
-- ERROR 1064: syntax error near 'NOt NULL'
-- Fixed typo and re-ran

-- Verify Table Structure
SHOW TABLES;
DESC Dept;
DESC Emp;
SHOW CREATE TABLE Emp;
SHOW CREATE TABLE Dept;

-- Data Loading Phase
SOURCE insdept.sql;
SELECT COUNT(*) FROM Dept;
SELECT * FROM Dept;

SOURCE insemp.sql;
-- ERROR 1406: Data too long for column 'job'
-- Fixed by changing job CHAR(8) to VARCHAR(20)

-- Re-create tables with fix
DROP TABLE IF EXISTS Emp;
DROP TABLE IF EXISTS Dept;
SOURCE create_tables.sql;
SOURCE insdept.sql;
SOURCE insemp.sql;

-- Verify Data Loading
SELECT COUNT(*) FROM Emp;
SELECT COUNT(*) FROM Dept;
SELECT DISTINCT job, LENGTH(job) as len FROM Emp ORDER BY len DESC;

-- Configure Output Display
pager less -SFX;
SELECT * FROM Emp;
SELECT * FROM Dept;

-- ===== QUERY TESTING PHASE =====

-- Query 1: High salary employees
SELECT lastname, workdept, salary 
FROM Emp 
WHERE salary >= 100000;

-- Verify count
SELECT COUNT(*) FROM Emp WHERE salary >= 100000;

-- Query 2: Low salary employees  
SELECT lastname, firstname, birthdate 
FROM Emp 
WHERE salary < 90000;

-- Query 3: Departments with NULL managers
SELECT * 
FROM Dept 
WHERE mgrno IS NULL;

-- Check how many have NULL managers
SELECT COUNT(*) FROM Dept WHERE mgrno IS NULL;
SELECT COUNT(*) FROM Dept WHERE mgrno IS NOT NULL;

-- Query 4: BETWEEN operator
SELECT empno, lastname, workdept, phoneno 
FROM Emp 
WHERE workdept BETWEEN 'D01' AND 'E01';

-- Alternative without BETWEEN
SELECT empno, lastname, workdept, phoneno 
FROM Emp 
WHERE workdept >= 'D01' AND workdept <= 'E01';

-- Query 5: LIKE with pattern matching
SELECT * 
FROM Dept 
WHERE deptname LIKE '%Service%';

-- Case sensitivity test
SELECT * 
FROM Dept 
WHERE deptname LIKE '%service%';

-- Other LIKE patterns tested
SELECT * FROM Dept WHERE deptname LIKE 'Service%';
SELECT * FROM Dept WHERE deptname LIKE '%Service';

-- Query 6: Compound conditions
SELECT empno, lastname, workdept 
FROM Emp 
WHERE workdept = 'D21' 
  AND salary <= 60000;

-- Query 7: CONCAT function
SELECT CONCAT(firstname, ' ', midinit, ' ', lastname) AS Full_name, 
       job 
FROM Emp;

-- Test with NULL handling
SELECT CONCAT(firstname, 
              CASE WHEN midinit IS NOT NULL THEN CONCAT(' ', midinit) ELSE '' END,
              ' ', lastname) AS Full_name, 
       job 
FROM Emp;

-- Query 8: TRUNCATE function
SELECT lastname, 
       workdept, 
       salary,
       salary/12 as exact_monthly,
       TRUNCATE(salary/12, 0) AS monthly_salary 
FROM Emp 
WHERE workdept IN ('B01', 'C01', 'D11', 'E21');

-- Query 9: ROUND function
SELECT lastname, 
       workdept,
       salary, 
       salary/52.1786 as exact_weekly,
       ROUND(salary/52.1786, 2) AS weekly_salary 
FROM Emp 
WHERE workdept IN ('B01', 'C01', 'E21');

-- Query 10: DATE_FORMAT
SELECT firstname, 
       lastname,
       birthdate, 
       DATE_FORMAT(birthdate, '%W, %e %M %Y') AS formatted_birthdate 
FROM Emp 
WHERE job = 'Designer';

-- Testing other date formats
SELECT DATE_FORMAT(NOW(), '%W, %e %M %Y');
SELECT DATE_FORMAT(NOW(), '%d/%m/%Y');
SELECT DATE_FORMAT(NOW(), '%Y-%m-%d');

-- Query 11: Partial date formatting
SELECT empno, 
       firstname, 
       DATE_FORMAT(birthdate, '%e %M') AS birth_month_day, 
       workdept 
FROM Emp 
WHERE workdept IN ('B01', 'C01', 'D11', 'E21');

-- Query 12: NULL handling in calculations
-- First check for NULL values
SELECT COUNT(*) FROM Emp WHERE salary IS NULL;
SELECT COUNT(*) FROM Emp WHERE bonus IS NULL;
SELECT COUNT(*) FROM Emp WHERE comm IS NULL;

-- The actual query
SELECT empno, 
       firstname, 
       lastname, 
       workdept,
       salary,
       bonus,
       comm,
       (IFNULL(salary,0) + IFNULL(bonus,0) + IFNULL(comm,0)) AS 'Total Income'
FROM Emp 
WHERE workdept IN ('B01', 'C01', 'E21');

-- Alternative with COALESCE
SELECT empno, 
       (COALESCE(salary,0) + COALESCE(bonus,0) + COALESCE(comm,0)) AS 'Total Income'
FROM Emp 
WHERE workdept IN ('B01', 'C01', 'E21');

-- Query 13: Age calculations
-- Method 1: DATEDIFF
SELECT lastname, 
       birthdate,
       DATEDIFF(CURDATE(), birthdate) as days_old,
       DATEDIFF(CURDATE(), birthdate)/365.25 as exact_age,
       TRUNCATE(DATEDIFF(CURDATE(), birthdate)/365.25, 0) AS age 
FROM Emp
ORDER BY age DESC
LIMIT 10;

-- Method 2: TIMESTAMPDIFF
SELECT lastname, 
       birthdate,
       TIMESTAMPDIFF(YEAR, birthdate, CURDATE()) AS age 
FROM Emp
ORDER BY age DESC
LIMIT 10;

-- Comparison of methods
SELECT lastname, 
       birthdate,
       TRUNCATE(DATEDIFF(CURDATE(), birthdate)/365.25, 0) AS age_method1,
       TIMESTAMPDIFF(YEAR, birthdate, CURDATE()) AS age_method2,
       (TIMESTAMPDIFF(YEAR, birthdate, CURDATE()) - 
        TRUNCATE(DATEDIFF(CURDATE(), birthdate)/365.25, 0)) AS difference
FROM Emp
WHERE birthdate IS NOT NULL
ORDER BY birthdate
LIMIT 20;

-- ===== ADDITIONAL TESTING =====

-- Check for youngest and oldest employees
SELECT MIN(birthdate) as oldest_birth, MAX(birthdate) as youngest_birth FROM Emp;

-- Salary statistics
SELECT MIN(salary), MAX(salary), AVG(salary), COUNT(*) FROM Emp;

-- Department employee counts
SELECT workdept, COUNT(*) as emp_count 
FROM Emp 
GROUP BY workdept 
ORDER BY emp_count DESC;

-- Jobs distribution
SELECT job, COUNT(*) as count 
FROM Emp 
GROUP BY job 
ORDER BY count DESC;

-- Testing various functions
SELECT CURRENT_DATE();
SELECT NOW();
help DATE_FORMAT;
help DATEDIFF;
help TIMESTAMPDIFF;
help CONCAT;
help TRUNCATE;

-- Session cleanup
notee;
pager;
exit;
